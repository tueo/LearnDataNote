"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[3605],{3671:(e,a)=>{a.A=(e,a)=>{const t=e.__vccOpts||e;for(const[e,n]of a)t[e]=n;return t}},5619:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>c,data:()=>p});var n=t(7847);const s=(0,n.Fv)('<h2 id="feed" tabindex="-1"><a class="header-anchor" href="#feed"><span>feed</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./scripts/feeds update <span class="token parameter variable">-a</span>\n./scripts/feeds <span class="token function">install</span> <span class="token parameter variable">-a</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下载依赖包" tabindex="-1"><a class="header-anchor" href="#下载依赖包"><span>下载依赖包</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>make download\nmake download V=s\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>后者可以显示详细的下载过程 LOG, 如果出现下载失败时，使用后者查看具体是哪个包下载失败。 如果有包下载失败，有两种方式可以解决：</p><ol><li>可以通过网络资源下载下来缺少的包，然后放入<code>dl</code>文件夹。</li><li>搭建科学上网环境。</li></ol>',6),l={href:"https://github.com/Elegycloud/clash-for-linux-backup",target:"_blank",rel:"noopener noreferrer"},r=(0,n.Lk)("code",null,"fatal: unable to connect to github.com:github.com[0:20.205.243.166]: errno=Unknown error",-1),i=(0,n.Lk)("code",null,'git config --global url."https://github.com".insteadOf git://github.com',-1),o=(0,n.Fv)('<h2 id="分区" tabindex="-1"><a class="header-anchor" href="#分区"><span>分区</span></a></h2><h2 id="编译生成文件" tabindex="-1"><a class="header-anchor" href="#编译生成文件"><span>编译生成文件</span></a></h2><p>编译生成的文件在<code>bin/ramips/</code>路径下</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>md5sums                              openwrt-ramips-mt7688-vmlinux.bin                         packages\nopenwrt-ramips-mt7688-root.squashfs  openwrt-ramips-mt7688-vmlinux.elf                         sha256sums\nopenwrt-ramips-mt7688-uImage.bin     openwrt-ramips-mt7688-WIDORA1664-squashfs-sysupgrade.bin\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>squashfs-sysupgrade.bin</strong>: sysupgrade 替换 linux 内核和 squash 文件系统，擦除整个 jffs2 部分。能保留配置文件，但不能保留二进制安装文件。</li></ul>',5),d={},c=(0,t(3671).A)(d,[["render",function(e,a){const t=(0,n.g2)("ExternalLinkIcon");return(0,n.uX)(),(0,n.CE)("div",null,[s,(0,n.Lk)("blockquote",null,[(0,n.Lk)("p",null,[(0,n.eW)("a. 我这里是在 VPS 环境中编译，搭建科学上网参考的 "),(0,n.Lk)("a",l,[(0,n.eW)("clash-for-linux-backup"),(0,n.bF)(t)]),(0,n.eW)(", 在 vps 环境访问 Clash Dashboard 是一个麻烦的问题，这里可以使用 vscode, 首先 vscode 通过 remote 连接到 VPS, 然后通过 PORTS 中增加一个 port forward, 将 VPS 的 dashboard 端口转发到本地，这样就可以通过本地访问 VPS 的 dashboard 了。 b. 下载过程中如果出现 "),r,(0,n.eW)(", 则需要发送 "),i])]),o])}]]),p=JSON.parse('{"path":"/protocol/linux/03_openwrt.html","title":"","lang":"zh-CN","frontmatter":{"description":"feed 下载依赖包 后者可以显示详细的下载过程 LOG, 如果出现下载失败时，使用后者查看具体是哪个包下载失败。 如果有包下载失败，有两种方式可以解决： 可以通过网络资源下载下来缺少的包，然后放入dl文件夹。 搭建科学上网环境。 a. 我这里是在 VPS 环境中编译，搭建科学上网参考的 clash-for-linux-backup, 在 vps 环境...","head":[["meta",{"property":"og:url","content":"https://newzone.top/protocol/linux/03_openwrt.html"}],["meta",{"property":"og:site_name","content":"三月的油菜花"}],["meta",{"property":"og:description","content":"feed 下载依赖包 后者可以显示详细的下载过程 LOG, 如果出现下载失败时，使用后者查看具体是哪个包下载失败。 如果有包下载失败，有两种方式可以解决： 可以通过网络资源下载下来缺少的包，然后放入dl文件夹。 搭建科学上网环境。 a. 我这里是在 VPS 环境中编译，搭建科学上网参考的 clash-for-linux-backup, 在 vps 环境..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-24T03:26:12.000Z"}],["meta",{"property":"article:author","content":"LearnData"}],["meta",{"property":"article:modified_time","content":"2024-09-24T03:26:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-24T03:26:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LearnData\\",\\"url\\":\\"https://newzone.top\\"}]}"]]},"headers":[{"level":2,"title":"feed","slug":"feed","link":"#feed","children":[]},{"level":2,"title":"下载依赖包","slug":"下载依赖包","link":"#下载依赖包","children":[]},{"level":2,"title":"分区","slug":"分区","link":"#分区","children":[]},{"level":2,"title":"编译生成文件","slug":"编译生成文件","link":"#编译生成文件","children":[]}],"git":{"createdTime":1724670320000,"updatedTime":1727148372000,"contributors":[{"name":"joe.tu","email":"joe.tu@quectel.com","commits":2},{"name":"quectel_lte","email":"Product_ruiwei@163.com","commits":2}]},"readingTime":{"minutes":1.1,"words":331},"filePathRelative":"protocol/linux/03_openwrt.md","localizedDate":"2024年8月26日","excerpt":"<h2>feed</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>./scripts/feeds update <span class=\\"token parameter variable\\">-a</span>\\n./scripts/feeds <span class=\\"token function\\">install</span> <span class=\\"token parameter variable\\">-a</span>\\n</code></pre></div>","autoDesc":true}')}}]);